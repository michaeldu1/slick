{"ast":null,"code":"var _jsxFileName = \"/Users/michaeldu/FullStackTutorial/client/src/components/UploadPostModal.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addItem } from '../actions/itemActions';\nimport ImageUploader from 'react-images-upload';\n\nclass ItemModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      name: ''\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const newItem = {\n        name: this.state.name\n      }; // add item via add item action\n\n      this.props.addItem(newItem); // close modal\n\n      this.toggle();\n    };\n  }\n\n  onDrop(picture) {\n    this.setState({\n      pictures: this.state.pictures.concat(picture)\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }\n    }, this.props.isAuthenticated ? /*#__PURE__*/React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginBottom: '2rem'\n      },\n      onClick: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, \"Share your cut!\") : /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mb-3 ml-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, \"Feed\"), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, \"Upload Post\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 10\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      id: \"item\",\n      placeholder: \"Clipper length, color, style, etc.\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginTop: '2rem'\n      },\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 10\n      }\n    }, \"Post\"))))));\n  }\n\n}\n\nItemModal.propTypes = {\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  item: state.item,\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  addItem\n})(ItemModal);","map":{"version":3,"sources":["/Users/michaeldu/FullStackTutorial/client/src/components/UploadPostModal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","PropTypes","connect","addItem","ImageUploader","ItemModal","state","modal","name","toggle","setState","onChange","e","target","value","onSubmit","preventDefault","newItem","props","onDrop","picture","pictures","concat","render","isAuthenticated","marginBottom","marginTop","propTypes","bool","mapStateToProps","item","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACIC,MADJ,EAEIC,KAFJ,EAGIC,WAHJ,EAIIC,SAJJ,EAKIC,IALJ,EAMIC,SANJ,EAOIC,KAPJ,EAQIC,KARJ,QASO,YATP;AAUA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;;AAEA,MAAMC,SAAN,SAAwBb,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9Bc,KAD8B,GACtB;AACTC,MAAAA,KAAK,EAAE,KADE;AAETC,MAAAA,IAAI,EAAE;AAFG,KADsB;;AAAA,SAU9BC,MAV8B,GAUrB,MAAM;AAChB,WAAKC,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADP,OAAd;AAGA,KAd+B;;AAAA,SAsB9BI,QAtB8B,GAsBlBC,CAAD,IAAO;AAChB,WAAKF,QAAL,CAAc;AAAC,SAACE,CAAC,CAACC,MAAF,CAASL,IAAV,GAAiBI,CAAC,CAACC,MAAF,CAASC;AAA3B,OAAd;AACD,KAxB6B;;AAAA,SA0B9BC,QA1B8B,GA0BlBH,CAAD,IAAO;AACnBA,MAAAA,CAAC,CAACI,cAAF;AACA,YAAMC,OAAO,GAAG;AACdT,QAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE;AADH,OAAhB,CAFmB,CAMnB;;AACA,WAAKU,KAAL,CAAWf,OAAX,CAAmBc,OAAnB,EAPmB,CASnB;;AACA,WAAKR,MAAL;AACE,KArC6B;AAAA;;AAgBhCU,EAAAA,MAAM,CAACC,OAAD,EAAU;AACf,SAAKV,QAAL,CAAc;AACZW,MAAAA,QAAQ,EAAE,KAAKf,KAAL,CAAWe,QAAX,CAAoBC,MAApB,CAA2BF,OAA3B;AADE,KAAd;AAGA;;AAmBCG,EAAAA,MAAM,GAAE;AACT,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKL,KAAL,CAAWM,eAAX,gBACD,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,KAAK,EAAE;AAACC,QAAAA,YAAY,EAAE;AAAf,OAA5B;AAAoD,MAAA,OAAO,EAAE,KAAKhB,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADC,gBAID;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAUC,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,KAAKH,KAAL,CAAWC,KAA1B;AAAiC,MAAA,MAAM,EAAE,KAAKE,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,KAAKA,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,eAEC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKM,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,eAIC,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,EAAE,EAAC,MAAlC;AAAyC,MAAA,WAAW,EAAC,oCAArD;AAA0F,MAAA,QAAQ,EAAE,KAAKJ,QAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD,eAKC,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,KAAK,EAAE;AAACe,QAAAA,SAAS,EAAE;AAAZ,OAA5B;AAAiD,MAAA,KAAK,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALD,CADD,CADD,CAFD,CAVD,CADD;AA6BE;;AArE6B;;AAA5BrB,S,CAMGsB,S,GAAY;AAClBH,EAAAA,eAAe,EAAEvB,SAAS,CAAC2B;AADT,C;;AAiErB,MAAMC,eAAe,GAAGvB,KAAK,KAAK;AAChCwB,EAAAA,IAAI,EAAExB,KAAK,CAACwB,IADoB;AAEhCN,EAAAA,eAAe,EAAElB,KAAK,CAACyB,IAAN,CAAWP;AAFI,CAAL,CAA7B;;AAKA,eAAetB,OAAO,CAAC2B,eAAD,EAAkB;AAAE1B,EAAAA;AAAF,CAAlB,CAAP,CAAsCE,SAAtC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup, \n    Label,\n    Input\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addItem } from '../actions/itemActions';\nimport ImageUploader from 'react-images-upload';\n\nclass ItemModal extends Component {\n    state = {\n\t\t\tmodal: false,\n\t\t\tname: '' \n\t\t}\n\t\t\n\t\tstatic propTypes = {\n\t\t\tisAuthenticated: PropTypes.bool\n\t\t}\n\n    toggle = () => {\n\t\t\tthis.setState({\n\t\t\t\t\tmodal: !this.state.modal\n\t\t\t});\n\t\t}\n\t\t\n\t\tonDrop(picture) {\n\t\t\tthis.setState({\n\t\t\t\t\tpictures: this.state.pictures.concat(picture),\n\t\t\t});\n\t\t}\n\n    onChange = (e) => {\n      this.setState({[e.target.name]: e.target.value})\n    }\n\n    onSubmit = (e) => {\n\t\t\te.preventDefault();\n\t\t\tconst newItem = {\n\t\t\t\t\tname: this.state.name\n\t\t\t}\n\n\t\t\t// add item via add item action\n\t\t\tthis.props.addItem(newItem);\n\n\t\t\t// close modal\n\t\t\tthis.toggle();\n    }\n\n    render(){\n\t\t\treturn(\n\t\t\t\t<div>\n\t\t\t\t\t{ this.props.isAuthenticated ? \t\t\t\t\t\n\t\t\t\t\t\t<Button color=\"dark\" style={{marginBottom: '2rem'}} onClick={this.toggle}> \n\t\t\t\t\t\t\tShare your cut!\n\t\t\t\t\t\t</Button> :\n\t\t\t\t\t\t<h4 className=\"mb-3 ml-4\">\n\t\t\t\t\t\t\tFeed\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t}\n\n\t\t\t\t\t<Modal isOpen={this.state.modal} toggle={this.toggle} >\n\t\t\t\t\t\t<ModalHeader toggle={this.toggle}>Upload Post</ModalHeader>\n\t\t\t\t\t\t<ModalBody>\n\t\t\t\t\t\t\t<Form onSubmit={this.onSubmit}>\n\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t<Label for=\"item\"> \n\t\t\t\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t<Input type=\"text\" name=\"name\" id=\"item\" placeholder=\"Clipper length, color, style, etc.\" onChange={this.onChange}/>\n\t\t\t\t\t\t\t\t\t<Button color=\"dark\" style={{marginTop: '2rem'}} block >\n\t\t\t\t\t\t\t\t\t\tPost\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</ModalBody>\n\t\t\t\t\t</Modal>\n\t\t\t\t</div>\n\t\t\t);\n    }\n}\nconst mapStateToProps = state => ({\n\t\titem: state.item,\n\t\tisAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, { addItem })(ItemModal)"]},"metadata":{},"sourceType":"module"}