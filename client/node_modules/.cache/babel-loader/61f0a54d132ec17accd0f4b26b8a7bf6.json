{"ast":null,"code":"var _jsxFileName = \"/Users/michaeldu/FullStackTutorial/client/src/components/auth/RegisterModal.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input, NavLink, Alert } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { addItem } from '../../actions/itemActions';\nimport PropTypes from 'prop-types';\nimport { register } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions';\n\nclass RegisterModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      name: '',\n      email: '',\n      username: '',\n      password: '',\n      msg: null\n    };\n\n    this.toggle = () => {\n      // Clear errors\n      this.props.clearErrors();\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        name,\n        email,\n        password\n      } = this.state; // Create user object\n\n      const newUser = {\n        name,\n        email,\n        password\n      }; // Attempt to register\n\n      this.props.register(newUser);\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      error,\n      isAuthenticated\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      // Check for register error\n      if (error.id === 'REGISTER_FAIL') {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    } // if authenticated close modal\n\n\n    if (this.state.modal) {\n      if (isAuthenticated) {\n        this.toggle();\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      onClick: this.toggle,\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, \" Register\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, this.state.msg ? /*#__PURE__*/React.createElement(Alert, {\n      color: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 42\n      }\n    }, this.state.msg, \" \") : null, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 31\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      className: \"mb-3\",\n      placeholder: \"Name\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      for: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 31\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      placeholder: \"Email\",\n      className: \"mb-3\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      for: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 31\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      className: \"mb-3\",\n      placeholder: \"Password\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginTop: '2rem'\n      },\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 31\n      }\n    }, \"Register\"))))));\n  }\n\n}\n\nRegisterModal.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  register: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  register,\n  clearErrors\n})(RegisterModal);","map":{"version":3,"sources":["/Users/michaeldu/FullStackTutorial/client/src/components/auth/RegisterModal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","NavLink","Alert","connect","addItem","PropTypes","register","clearErrors","RegisterModal","state","modal","name","email","username","password","msg","toggle","props","setState","onChange","e","target","value","onSubmit","preventDefault","newUser","componentDidUpdate","prevProps","error","isAuthenticated","id","render","marginTop","propTypes","bool","object","isRequired","func","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup, \n    Label,\n    Input,\n    NavLink,\n    Alert\n} from 'reactstrap';\n\nimport { connect } from 'react-redux';\nimport { addItem } from '../../actions/itemActions';\nimport PropTypes from 'prop-types';\nimport { register } from '../../actions/authActions'\nimport { clearErrors } from '../../actions/errorActions'\n\n\nclass RegisterModal extends Component {\n    state = {\n        modal: false,\n        name: '', \n        email: '',\n        username: '',\n        password: '',\n        msg: null\n    }\n\n    static propTypes = {\n      isAuthenticated: PropTypes.bool,\n      error: PropTypes.object.isRequired,\n      register: PropTypes.func.isRequired,\n      clearErrors: PropTypes.func.isRequired\n    }\n\n    componentDidUpdate(prevProps) {\n      const { error, isAuthenticated } = this.props;\n      if(error !== prevProps.error){\n        // Check for register error\n        if(error.id === 'REGISTER_FAIL'){\n          this.setState({ msg: error.msg.msg });\n        } else {\n          this.setState({ msg: null})\n        }\n      }\n\n      // if authenticated close modal\n      if(this.state.modal) {\n        if(isAuthenticated) {\n          this.toggle();\n        }\n      }\n    }\n\n    toggle = () => {\n      // Clear errors\n      this.props.clearErrors();\n\n      this.setState({\n          modal: !this.state.modal\n      });\n    }\n\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        const { name, email, password } = this.state;\n\n        // Create user object\n        const newUser = {\n          name, \n          email, \n          password\n        }\n\n        // Attempt to register\n        this.props.register(newUser);\n    }\n\n    render(){\n        return(\n            <div>\n                <NavLink onClick={this.toggle} href=\"#\">\n                  Register\n                </NavLink>\n\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\n                    <ModalHeader toggle={this.toggle}> Register</ModalHeader>\n                    <ModalBody>\n                      { this.state.msg ? <Alert color=\"danger\">{ this.state.msg } </Alert> : null}\n                      <Form onSubmit={this.onSubmit}>\n                          <FormGroup>\n                              <Label for=\"name\">Name</Label>\n                              <Input \n                                  type=\"text\"\n                                  name=\"name\"\n                                  id=\"name\"\n                                  className=\"mb-3\"\n                                  placeholder=\"Name\"\n                                  onChange={this.onChange}\n                              />\n\n                              <Label for=\"email\">Email</Label>\n                              <Input \n                                  type=\"email\"\n                                  name=\"email\"\n                                  id=\"email\"\n                                  placeholder=\"Email\"\n                                  className=\"mb-3\"\n                                  onChange={this.onChange}\n                              />\n\n                              <Label for=\"password\">Password</Label>\n                              <Input \n                                  type=\"password\"\n                                  name=\"password\"\n                                  id=\"password\"\n                                  className=\"mb-3\"\n                                  placeholder=\"Password\"\n                                  onChange={this.onChange}\n                              />\n                              <Button color=\"dark\" style={{marginTop: '2rem'}} block> \n                                Register\n                              </Button>\n                          </FormGroup>\n                      </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n})\n\nexport default connect(\n  mapStateToProps, { register, clearErrors }\n)(RegisterModal);"]},"metadata":{},"sourceType":"module"}