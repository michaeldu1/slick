{"ast":null,"code":"import { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING, LIKE_ITEM } from './types';\nimport { tokenConfig } from './authActions';\nimport { returnErrors } from './errorActions';\nimport axios from 'axios';\nexport const getItems = () => dispatch => {\n  dispatch(setItemsLoading());\n  axios.get('/api/items').then(res => dispatch({\n    type: GET_ITEMS,\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const addItem = item => (dispatch, getState) => {\n  axios.post('/api/items', item, tokenConfig(getState)).then(res => dispatch({\n    type: ADD_ITEM,\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const makePost = item => (dispatch, getState) => {\n  axios.post('/api/items', item, tokenConfig(getState)).then(res => dispatch({\n    type: ADD_ITEM,\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const deleteItem = id => (dispatch, getState) => {\n  axios.delete(`/api/items/${id}`, tokenConfig(getState)).then(res => dispatch({\n    type: DELETE_ITEM,\n    payload: id\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const likeItem = id => (dispatch, getState) => {\n  console.log(\"like route hit\", getState);\n  axios.post(`/api/items/${id}`, tokenConfig(getState)).then(res => dispatch({\n    type: LIKE_ITEM,\n    payload: id\n  })).catch(err => {\n    console.log(\"there was an error\");\n    dispatch(returnErrors(err.response.data, err.response.status));\n  });\n};\nexport const setItemsLoading = () => {\n  return {\n    type: ITEMS_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/michaeldu/FullStackTutorial/client/src/actions/itemActions.js"],"names":["GET_ITEMS","ADD_ITEM","DELETE_ITEM","ITEMS_LOADING","LIKE_ITEM","tokenConfig","returnErrors","axios","getItems","dispatch","setItemsLoading","get","then","res","type","payload","data","catch","err","response","status","addItem","item","getState","post","makePost","deleteItem","id","delete","likeItem","console","log"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,WAA9B,EAA2CC,aAA3C,EAA0DC,SAA1D,QAA2E,SAA3E;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAMC,QAAQ,IAAI;AACtCA,EAAAA,QAAQ,CAACC,eAAe,EAAhB,CAAR;AACAH,EAAAA,KAAK,CAACI,GAAN,CAAU,YAAV,EACCC,IADD,CACMC,GAAG,IAAIJ,QAAQ,CAAC;AAClBK,IAAAA,IAAI,EAAEd,SADY;AAElBe,IAAAA,OAAO,EAAEF,GAAG,CAACG;AAFK,GAAD,CADrB,EAKCC,KALD,CAKOC,GAAG,IACNT,QAAQ,CAACH,YAAY,CAACY,GAAG,CAACC,QAAJ,CAAaH,IAAd,EAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CANZ;AAQH,CAVM;AAYP,OAAO,MAAMC,OAAO,GAAGC,IAAI,IAAI,CAACb,QAAD,EAAWc,QAAX,KAAwB;AACnDhB,EAAAA,KAAK,CAACiB,IAAN,CAAW,YAAX,EAAyBF,IAAzB,EAA+BjB,WAAW,CAACkB,QAAD,CAA1C,EACCX,IADD,CACMC,GAAG,IAAIJ,QAAQ,CAAC;AAClBK,IAAAA,IAAI,EAAEb,QADY;AAElBc,IAAAA,OAAO,EAAEF,GAAG,CAACG;AAFK,GAAD,CADrB,EAKCC,KALD,CAKOC,GAAG,IACNT,QAAQ,CAACH,YAAY,CAACY,GAAG,CAACC,QAAJ,CAAaH,IAAd,EAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CANZ;AAQH,CATM;AAWP,OAAO,MAAMK,QAAQ,GAAGH,IAAI,IAAI,CAACb,QAAD,EAAWc,QAAX,KAAwB;AACpDhB,EAAAA,KAAK,CAACiB,IAAN,CAAW,YAAX,EAAyBF,IAAzB,EAA+BjB,WAAW,CAACkB,QAAD,CAA1C,EACCX,IADD,CACMC,GAAG,IAAIJ,QAAQ,CAAC;AAClBK,IAAAA,IAAI,EAAEb,QADY;AAElBc,IAAAA,OAAO,EAAEF,GAAG,CAACG;AAFK,GAAD,CADrB,EAKCC,KALD,CAKOC,GAAG,IACNT,QAAQ,CAACH,YAAY,CAACY,GAAG,CAACC,QAAJ,CAAaH,IAAd,EAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CANZ;AAQH,CATM;AAWP,OAAO,MAAMM,UAAU,GAAGC,EAAE,IAAI,CAAClB,QAAD,EAAWc,QAAX,KAAwB;AACpDhB,EAAAA,KAAK,CAACqB,MAAN,CAAc,cAAaD,EAAG,EAA9B,EAAiCtB,WAAW,CAACkB,QAAD,CAA5C,EACCX,IADD,CACMC,GAAG,IAAIJ,QAAQ,CAAC;AAClBK,IAAAA,IAAI,EAAEZ,WADY;AAElBa,IAAAA,OAAO,EAAEY;AAFS,GAAD,CADrB,EAKCV,KALD,CAKOC,GAAG,IACNT,QAAQ,CAACH,YAAY,CAACY,GAAG,CAACC,QAAJ,CAAaH,IAAd,EAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CANZ;AAQH,CATM;AAWP,OAAO,MAAMS,QAAQ,GAAGF,EAAE,IAAI,CAAClB,QAAD,EAAWc,QAAX,KAAwB;AAClDO,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BR,QAA9B;AACAhB,EAAAA,KAAK,CAACiB,IAAN,CAAY,cAAaG,EAAG,EAA5B,EAA+BtB,WAAW,CAACkB,QAAD,CAA1C,EACCX,IADD,CACMC,GAAG,IAAIJ,QAAQ,CAAC;AAClBK,IAAAA,IAAI,EAAEV,SADY;AAElBW,IAAAA,OAAO,EAAEY;AAFS,GAAD,CADrB,EAKCV,KALD,CAKOC,GAAG,IACN;AAACY,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACDtB,IAAAA,QAAQ,CAACH,YAAY,CAACY,GAAG,CAACC,QAAJ,CAAaH,IAAd,EAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CAAR;AAA+D,GAPnE;AASH,CAXM;AAaP,OAAO,MAAMV,eAAe,GAAG,MAAM;AACjC,SAAO;AACHI,IAAAA,IAAI,EAAEX;AADH,GAAP;AAGH,CAJM","sourcesContent":["import { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING, LIKE_ITEM } from './types';\nimport { tokenConfig } from './authActions';\nimport { returnErrors } from './errorActions';\nimport axios from 'axios';\n\nexport const getItems = () => dispatch => {\n    dispatch(setItemsLoading());\n    axios.get('/api/items')\n    .then(res => dispatch({\n        type: GET_ITEMS,\n        payload: res.data\n    }))\n    .catch(err => \n        dispatch(returnErrors(err.response.data, err.response.status))\n    );\n}\n\nexport const addItem = item => (dispatch, getState) => {\n    axios.post('/api/items', item, tokenConfig(getState))\n    .then(res => dispatch({\n        type: ADD_ITEM,\n        payload: res.data\n    }))\n    .catch(err => \n        dispatch(returnErrors(err.response.data, err.response.status))\n    );\n}\n\nexport const makePost = item => (dispatch, getState) => {\n    axios.post('/api/items', item, tokenConfig(getState))\n    .then(res => dispatch({\n        type: ADD_ITEM,\n        payload: res.data\n    }))\n    .catch(err => \n        dispatch(returnErrors(err.response.data, err.response.status))\n    );\n}\n\nexport const deleteItem = id => (dispatch, getState) => {\n    axios.delete(`/api/items/${id}`, tokenConfig(getState))\n    .then(res => dispatch({\n        type: DELETE_ITEM,\n        payload: id\n    }))\n    .catch(err => \n        dispatch(returnErrors(err.response.data, err.response.status))\n    );\n}\n\nexport const likeItem = id => (dispatch, getState) => {\n    console.log(\"like route hit\", getState)\n    axios.post(`/api/items/${id}`, tokenConfig(getState))\n    .then(res => dispatch({\n        type: LIKE_ITEM,\n        payload: id\n    }))\n    .catch(err => \n        {console.log(\"there was an error\");\n        dispatch(returnErrors(err.response.data, err.response.status))}\n    );\n}\n\nexport const setItemsLoading = () => {\n    return {\n        type: ITEMS_LOADING\n    }\n}"]},"metadata":{},"sourceType":"module"}