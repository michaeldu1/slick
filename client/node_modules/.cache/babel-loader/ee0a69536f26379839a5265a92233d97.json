{"ast":null,"code":"var _jsxFileName = \"/Users/michaeldu/FullStackTutorial/client/src/components/auth/RegisterModal.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input, NavLink } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { addItem } from '../../actions/itemActions';\nimport PropTypes from 'prop-types';\nimport { register } from '../../actions/authActions';\n\nclass RegisterModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      name: '',\n      email: '',\n      password: '',\n      msg: null\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        name,\n        email,\n        password\n      } = this.state; // Create user object\n\n      const newUser = {\n        name,\n        email,\n        password\n      }; // Attempt to register\n\n      this.props.register(newUser);\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      error\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      // Check for register error\n      if (error.id === 'REGISTER_FAIL') {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      onClick: this.toggle,\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, \" Register\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      style: {\n        marginLeft: '.8rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      className: \"mb-3\",\n      placeholder: \"Name\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      for: \"email\",\n      style: {\n        marginLeft: '.8rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      placeholder: \"Email\",\n      className: \"mb-3\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      for: \"password\",\n      style: {\n        marginLeft: '.8rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      className: \"mb-3\",\n      placeholder: \"Password\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginTop: '2rem'\n      },\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }, \"Register\")))));\n  }\n\n}\n\nRegisterModal.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  register: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  register\n})(RegisterModal);","map":{"version":3,"sources":["/Users/michaeldu/FullStackTutorial/client/src/components/auth/RegisterModal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","NavLink","connect","addItem","PropTypes","register","RegisterModal","state","modal","name","email","password","msg","toggle","setState","onChange","e","target","value","onSubmit","preventDefault","newUser","props","componentDidUpdate","prevProps","error","id","render","marginLeft","marginTop","propTypes","isAuthenticated","bool","object","isRequired","func","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup, \n    Label,\n    Input,\n    NavLink\n    \n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { addItem } from '../../actions/itemActions';\nimport PropTypes from 'prop-types';\nimport { register } from '../../actions/authActions'\n\nclass RegisterModal extends Component {\n    state = {\n        modal: false,\n        name: '', \n        email: '',\n        password: '',\n        msg: null\n    }\n\n    static propTypes = {\n      isAuthenticated: PropTypes.bool,\n      error: PropTypes.object.isRequired,\n    register: PropTypes.func.isRequired\n    }\n\n    componentDidUpdate(prevProps) {\n      const { error } = this.props;\n      if(error !== prevProps.error){\n        // Check for register error\n        if(error.id === 'REGISTER_FAIL'){\n          this.setState({ msg: error.msg.msg });\n        } else {\n          this.setState({ msg: null})\n        }\n      }\n    }\n\n    toggle = () => {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        const { name, email, password } = this.state;\n\n        // Create user object\n        const newUser = {\n          name, \n          email, \n          password\n        }\n\n        // Attempt to register\n        this.props.register(newUser);\n    }\n\n    render(){\n        return(\n            <div>\n                <NavLink onClick={this.toggle} href=\"#\">\n                  Register\n                </NavLink>\n\n                <Modal\n                    isOpen={this.state.modal}\n                    toggle={this.toggle}\n                >\n                    <ModalHeader toggle={this.toggle}> Register</ModalHeader>\n                    <Form onSubmit={this.onSubmit}>\n                        <FormGroup>\n                            <Label for=\"name\" style={{marginLeft: '.8rem'}}>Name</Label>\n                            <Input \n                                type=\"text\"\n                                name=\"name\"\n                                id=\"name\"\n                                className=\"mb-3\"\n                                placeholder=\"Name\"\n                                onChange={this.onChange}\n                            />\n\n                            <Label for=\"email\" style={{marginLeft: '.8rem'}}>Email</Label>\n                            <Input \n                                type=\"email\"\n                                name=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                className=\"mb-3\"\n                                onChange={this.onChange}\n                            />\n\n                            <Label for=\"password\" style={{marginLeft: '.8rem'}}>Password</Label>\n                            <Input \n                                type=\"password\"\n                                name=\"password\"\n                                id=\"password\"\n                                className=\"mb-3\"\n                                placeholder=\"Password\"\n                                onChange={this.onChange}\n                            />\n                            <Button color=\"dark\" style={{marginTop: '2rem'}} block> \n                              Register\n                            </Button>\n                        </FormGroup>\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n})\n\nexport default connect(\n  mapStateToProps, { register }\n)(RegisterModal);"]},"metadata":{},"sourceType":"module"}